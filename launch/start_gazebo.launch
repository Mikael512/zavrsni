    <launch>
    
        <!-- Initial position in Gazebo -->
        <arg name="x0" default="0"/>
        <arg name="y0" default="0"/>
        <arg name="z0" default="0"/>
        <arg name="gui" default="true" />

        <!-- Arm type -->
        <arg name="arm" default="gen3"/>
        <arg name="dof" default="7" if="$(eval arg('arm') == 'gen3')"/> <!-- Number of degrees of freedom of the arm -->
        <arg name="vision" default="true"/> <!-- True if the arm has a Vision module -->

        <!-- Default gripper for Gen3 is none, default gripper for Gen3 lite is gen3_lite_2f -->
        <arg name="gripper" default="" if="$(eval arg('arm') == 'gen3')"/>

        <arg name="robot_name" default="my_$(arg arm)"/>
        <arg name="prefix" default=""/>
        <arg name="cyclic_data_publish_rate" default="40"/> <!--Hz-->

        <!-- Gazebo parameters -->
        <arg name="use_sim_time" default="true"/>
        <arg name="debug" default="false" />
        <arg name="paused" default="true"/>

        

        <!-- Launch Gazebo with an empty world -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="gui" value="$(arg gui)" />
            <arg name="use_sim_time" value="$(arg use_sim_time)"/>
            <arg name="debug" value="$(arg debug)" />
            <arg name="paused" value="$(arg paused)"/>
        </include>
        
        <group ns="my_gen3">
        <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -param robot_description -model $(arg robot_name) -x $(arg x0) -y $(arg y0) -z $(arg z0)
                -robot_namespace $(arg robot_name)
                -J $(arg prefix)joint_1 0.73
                -J $(arg prefix)joint_2 0.53
                -J $(arg prefix)joint_3 0.0
                -J $(arg prefix)joint_4 1.75
                -J $(arg prefix)joint_5 0.066
                -J $(arg prefix)joint_6 0.806
                -J $(arg prefix)joint_7 -0.06"  
            />

        <rosparam file="$(find kortex_control)/arms/$(arg arm)/$(arg dof)dof/config/joint_position_controllers.yaml" command="load" subst_value="true"/>
        <rosparam file="$(find kortex_control)/grippers/$(arg gripper)/config/gripper_action_controller_parameters.yaml" command="load" subst_value="true"
            unless="$(eval not arg('gripper'))"/>

        <node name="$(arg prefix)$(arg arm)_trajectory_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
            output="screen" args="$(arg prefix)$(arg arm)_joint_trajectory_controller $(arg prefix)joint_state_controller"
            if="$(eval not arg('gripper'))"/>-->

        <node name="$(arg prefix)$(arg arm)_position_controllers_spawner" pkg="controller_manager" type="spawner" respawn="false"
            output="screen" if="$(eval arg('dof') == 7)" args=" --stopped
            $(arg prefix)joint_1_position_controller
            $(arg prefix)joint_2_position_controller
            $(arg prefix)joint_3_position_controller
            $(arg prefix)joint_4_position_controller
            $(arg prefix)joint_5_position_controller
            $(arg prefix)joint_6_position_controller
            $(arg prefix)joint_7_position_controller"/>

        
        <!-- Start simulated Kortex Driver -->
        <node name="$(arg robot_name)_driver" pkg="kortex_driver" type="kortex_arm_driver" output="screen"> <!--launch-prefix="gdb -ex run args"-->
            <param name="sim" value="true"/>
            <param name="cyclic_data_publish_rate" value="$(arg cyclic_data_publish_rate)"/>
            <param name="arm" value="$(arg arm)"/>
            <param name="gripper" value="$(arg gripper)"/>
            <param name="dof" value="$(arg dof)"/>
            <param name="robot_name" value="$(arg robot_name)"/>
            <param name="prefix" value="$(arg prefix)"/>
            <rosparam command="load" file="$(find kortex_description)/arms/$(arg arm)/$(arg dof)dof/config/joint_limits.yaml" subst_value="true"/>
            <rosparam command="load" file="$(find kortex_description)/arms/$(arg arm)/$(arg dof)dof/config/twist_limits.yaml" subst_value="true"/>
            <!-- If there is a gripper, load the active joint names for it -->
            <rosparam command="load" file="$(find kortex_description)/grippers/$(arg gripper)/config/joint_limits.yaml" unless="$(eval not arg('gripper'))" subst_value="true"/>
        </node>


        <!-- Start robot state publisher -->
        
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" />
        </group>
    </launch>